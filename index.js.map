{"version":3,"file":"index.js","sources":["src/module/options.js","src/module/info_windows.js","src/module/open_close.js","src/module/create_map.js","src/module/close_info.js","src/module/markers.js","src/module/maploader.js","src/module/index.js","src/module/create_gmaps_path.js","src/module/loaded_callback.js"],"sourcesContent":["/* global google */\nconst setDefaults = ({ pins: dataPins, lng, lat }) => {\n  const pins = Array.isArray(dataPins) ? dataPins : [dataPins];\n  if (pins.length === 0) return { pins };\n  console.log(pins);\n  if (pins.length > 1 && !lng && !lat) {\n    return {\n      pins,\n      boundmap: true,\n    };\n  }\n\n  if (lng && lat) {\n    return {\n      pins,\n      lng,\n      lat,\n    };\n  }\n\n  return {\n    pins,\n    lng: pins[0].lng,\n    lat: pins[0].lat,\n  };\n};\n\nexport default dataset => {\n  var data;\n\n  if (dataset) {\n    data = JSON.parse(dataset);\n  }\n\n  let opts = {\n    autozoom: false,\n    boundmap: false,\n    centermap: false,\n    draggable: true,\n    optimized: false,\n    mapTypeControl: false,\n    scrollwheel: false,\n    type: 'ROADMAP',\n    zoom: 15,\n    zoomControl: true,\n    ...data,\n    ...setDefaults(data),\n  };\n\n  const object = {\n    addType: type => {\n      const newType = type || opts.type;\n      opts.mapTypeId = google.maps.MapTypeId[newType];\n\n      return object;\n    },\n    addCenter: (lat, lng) => {\n      const newLat = lat || opts.lat;\n      const newLng = lng || opts.lng;\n\n      opts.center = new google.maps.LatLng(newLat, newLng);\n\n      return object;\n    },\n    get: key => opts[key],\n    getAll: () => opts,\n    update: config => {\n      opts = { ...opts, ...config };\n      return object;\n    },\n  };\n\n  return object;\n};\n","/* global InfoBubble google */\nfunction createInfoBubble(maps, content, opts) {\n  let options = {\n    shadowStyle: 0,\n    padding: 0,\n    backgroundColor: '#55a440',\n    borderRadius: 0,\n    arrowSize: 2,\n    borderWidth: 0,\n    borderColor: '#2c2c2c',\n    disableAutoPan: false,\n    hideCloseButton: true,\n    arrowPosition: 50,\n    minHeight: 220,\n    backgroundClassName: 'infowindow clearfix',\n    arrowStyle: 2,\n    maps,\n    content,\n    ...opts,\n  };\n\n  // options.maps = map;\n  // options.content = info;\n\n  return new InfoBubble(options);\n}\n\nexport default (map, info, opts) => {\n  if (typeof InfoBubble !== 'undefined') {\n    return createInfoBubble(map, info, opts);\n  }\n\n  return new google.maps.InfoWindow({ content: info });\n};\n","/* global google InfoBubble */\nfunction addClose(map, id) {\n  return function(marker, infowindow) {\n    let elem = document.getElementById(`pin-${id}`);\n    /* istanbul ignore if  */\n    if (elem === null) return null;\n\n    google.maps.event.addDomListener(elem, 'click', function(e) {\n      e.preventDefault();\n      infowindow.close(map, marker);\n    });\n  };\n}\n\nexport default (map, id, closer) => {\n  let close = addClose(map, id);\n\n  return (marker, infowindow) => {\n    // console.log('infowindow >>>>', infowindow);\n    google.maps.event.addListener(marker, 'click', () => {\n      closer.closeAllWindows();\n      infowindow.open(map, marker);\n      /* istanbul ignore else  */\n      if (typeof InfoBubble !== 'undefined') {\n        google.maps.event.trigger(map, 'resize');\n        setTimeout(() => {\n          close(marker, infowindow);\n        }, 500);\n      }\n    });\n  };\n};\n","import closeInfo from './close_info';\nimport markerCreator from './markers';\n\n/* global InfoBubble google */\n\nfunction makeMarker(createMarker, closer) {\n  return function(mk) {\n    const marker = createMarker(mk);\n    closer.addMarkers(marker);\n    return marker;\n  };\n}\n\nfunction creator(markers, create) {\n  if (Array.isArray(markers)) {\n    return markers.map(mk => create(mk));\n  }\n  return [create(markers)];\n}\n\nconst centerMap = (map, markers) => LatLngBounds => {\n  const bounds = new LatLngBounds();\n  markers.forEach(mk => {\n    bounds.extend(mk.marker.getPosition());\n  });\n\n  map.fitBounds(bounds);\n};\n\nconst setZoom = (map, zoom) => event => {\n  var listener = event.addListener(map, 'idle', () => {\n    if (map.getZoom() !== zoom) {\n      map.setZoom(zoom);\n    }\n    event.removeListener(listener);\n  });\n};\n\n// return this.obj;\n\nexport default el => {\n  let map, markers;\n  if (!el) return null;\n  return (Map, options) => {\n    // Should tweak this - not side effect free\n    console.log('options', options.getAll());\n    map = new Map(el, options.getAll());\n\n    const closer = closeInfo(map);\n    const create = makeMarker(markerCreator(map, closer), closer);\n\n    markers = creator(options.get('pins'), create);\n\n    var obj = {\n      centerMap: centerMap(map, markers),\n      getMap: () => map,\n      setPosition: LatLng => {\n        const pos = LatLng({ lat: options.get('lat'), lng: options.get('lng') });\n        map.setCenter(pos);\n      },\n      setZoom: setZoom(map, options.get('zoom')),\n    };\n\n    return obj;\n  };\n};\n","/**\n * Google Maps path module.\n * @module close_info\n * @see module:@djforth/gmaps_helper\n * Sets close info windows\n *\n * type {function}\n * @param {object} Map - Google Map Object\n * @return {object} of functions to build path\n */\n\nexport default map => {\n  let markers = [];\n  return {\n    /** Add markers to list\n     * @param {array} or Object m - marker array or Object\n     */\n    addMarkers: m => {\n      if (Array.isArray(m)) {\n        markers = markers.concat(m);\n        return;\n      }\n\n      markers.push(m);\n    },\n    /** Close all windows */\n    closeAllWindows: () => {\n      markers.forEach(mk => {\n        if (mk.hasOwnProperty('info') && mk.hasOwnProperty('marker')) {\n          mk.info.close(map, mk.marker);\n        }\n      });\n    },\n    /** Returns mark list\n     * @return {array} - markers array\n     */\n    getAll: () => markers,\n  };\n};\n","/* global google */\nimport createInfoWindow from './info_windows';\nimport addOpenClose from './open_close';\n\n/**\n * Marker module.\n * @module marker\n * @see module:@djforth/googlemap\n */\n\nconst checkMarker = marker => typeof marker.setIcon === 'function';\n\n/** Creates custom map marker */\nconst setIcon = (marker, icon) => {\n  if (!checkMarker(marker)) return;\n  if (icon.picture && icon.width && icon.height) {\n    marker.setIcon(icon.picture, [icon.width, icon.height]);\n  }\n};\n\n/**\n * map\n * Will create google map marker\n *\n * type {function}\n * @param {function} map - Google map object\n * @param {function} closer - Function to apply close method all to info windows\n * @params {object} info window options\n * @return {object} marker & info(window)\n */\nexport default (map, closer, opts) => mk => {\n  const { lng, lat } = mk;\n  let marker = new google.maps.Marker({\n    position: new google.maps.LatLng(lat, lng),\n    map: map,\n  });\n\n  setIcon(marker, mk);\n  let infoWindow;\n\n  if (mk.infowindow) {\n    infoWindow = createInfoWindow(map, mk.infowindow, opts);\n    let infoActions = addOpenClose(map, mk.id, closer);\n    infoActions(marker, infoWindow);\n  }\n\n  return { marker: marker, info: infoWindow };\n};\n","/** Creates Script tag to load api code */\nfunction createScript(path, id) {\n  var script = document.createElement('script');\n  script.id = id;\n  script.type = 'text/javascript';\n  script.src = path;\n  return script;\n}\n\n/** Plugin loader */\nfunction loadPlugins(plugins) {\n  if (Array.isArray(plugins) && plugins.length > 0) {\n    plugins.forEach((p, i) => {\n      if (p !== undefined) {\n        document.body.appendChild(createScript(p, `plugin${i}`));\n      }\n    });\n  }\n}\n\n/**\n * Maploader module.\n * @module maploader\n * @see module:@djforth/gmaps_helper\n * Loads googlemap API & and plugin code async\n *\n * type {function}\n * @param {string} Path to Google Map API with Query Strings\n * @return {object} of functions to build path\n */\nexport default path => {\n  let plugins = [];\n  var obj = {\n    /** Add plugins */\n    addPlugins: p => {\n      if (Array.isArray(p)) {\n        plugins = plugins.concat(p);\n      } else if (typeof p === 'string') {\n        plugins.push(p);\n      }\n\n      return obj;\n    },\n    /** load google api */\n    load: () => {\n      if (!document.getElementById('gmapsScripts')) {\n        document.body.appendChild(createScript(path, 'gmapsScripts'));\n        loadPlugins(plugins);\n      }\n    },\n  };\n\n  return obj;\n  // For Ref - document.body.appendChild(createScript(`http://maps.google.com/maps/api/js?v=3.&key=AIzaSyC6BXa6juoBqO_aUO9pFlNMVD3wroMdTrc&libraries=geometry&async=2&region=uk&callback=${cb_str}`);\n};\n","import partial from 'lodash/partial';\n\nimport createPath from './create_gmaps_path';\nimport getOptions from './options';\n// import LazyLoad from './lazyload';\nimport mapCreator from './create_map';\nimport mapLoader from './maploader';\nimport LoadedCallback from './loaded_callback';\n\nif (!Array.isArray) {\n  Array.isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n\n/* global InfoBubble google */\n\nconst findMap = maps => id => {\n  const map = maps.find(({ id: mapId }) => id === mapId);\n  if (map) return map.options;\n};\n\n/**\n * Googlemap module.\n * @module @djforth/googlemap\n */\n\n/**\n * map\n * Will create google map\n *\n * type {function}\n * @param {string} key - Google Map API Key\n * @return {object} of functions to build path\n */\nexport default key => {\n  const lazyload = false;\n\n  const mapEls = [...document.querySelectorAll('[data-map]')];\n  if (mapEls.length === 0) return;\n  // el = document.getElementById(id);\n  // if (!isElement(el)) return;\n\n  const gmapsPath = createPath(key);\n  const maps = mapEls.map(el => ({\n    options: getOptions(el.dataset.map),\n    map: mapCreator(el),\n    id: el.id,\n  }));\n\n  const finder = findMap(maps);\n\n  const callback = LoadedCallback(maps);\n  window.mapLoaded = callback;\n\n  var obj = {\n    /** Adds callback to map creation\n     * param {function} callback\n     */\n    addCallback: cb => {\n      window.mapLoaded = partial(callback, cb);\n      return obj;\n    },\n    /** Add centre map position\n     * param {string} id - id of map\n     * param {integer} lat - latitude\n     * param {integer} lng - longitude\n     */\n    addCenter: (id, lat, lng) => {\n      const options = finder(id);\n      if (!options) return obj;\n      options.update({ lat: lat, lng: lng, centermap: true });\n      return obj;\n    },\n    /** Add gmaps config\n     * param {object} config object\n     */\n    addConfig: (id, config) => {\n      const options = finder(id);\n      if (!options) return obj;\n      options.update(config);\n      return obj;\n    },\n    /** Adds lazy load\n     * param {string} type - Event type\n     */\n    // addlazyload: type => {\n    //   lazyload = true;\n    //   LazyLoad(el, type, removeLoader => {\n    //     removeLoader();\n    //     mapLoader(gmapsPath.getPath('mapLoaded'))\n    //       .addPlugins(options.get('plugins'))\n    //       .load();\n    //   });\n    // },\n    /** Adds new google map plugin\n     * param {string} type - Event type\n     */\n    addLibraries: (id, libraries) => {\n      const options = finder(id);\n      if (!options) return obj;\n      options.update({ libraries: libraries });\n      return obj;\n    },\n    /** Sets google map type\n     * param {string} type - Map type */\n    addType: (id, type) => {\n      const options = finder(id);\n      if (!options) return obj;\n      options.update({ type: type });\n      return obj;\n    },\n\n    getMaps: () => maps,\n    /** Loads map */\n    load: () => {\n      if (!lazyload) {\n        const libraries = maps.reduce((libs, { options }) => libs.concat(options.get('libraries')), []);\n\n        mapLoader(gmapsPath.getPath('mapLoaded'))\n          .addPlugins(libraries)\n          .load();\n      }\n    },\n\n    setBounds: id => {\n      const options = finder(id);\n      if (!options) return obj;\n      options.update({ boundmap: true });\n      return obj;\n    },\n\n    setZoom: (id, z) => {\n      const options = finder(id);\n      if (!options) return obj;\n      options.update({ zoom: z, autozoom: true });\n      return obj;\n    },\n  };\n\n  return obj;\n};\n","/**\n * Google Maps path module.\n * @module create_gmaps_path\n * @see module:@djforth/gmaps_helper\n * Creates google map api path with relevant query strings\n *\n * type {function}\n * @param {string} key - Google Map API Key\n * @return {object} of functions to build path\n */\nexport default key => {\n  let gmaps, libraries, region;\n  gmaps = 'https://maps.google.com/maps/api/js?';\n  gmaps += `key=${key}`;\n  libraries = [];\n  region = 'uk';\n  var obj = {\n    /** Add Google maps libraries - see https://developers.google.com/maps/documentation/javascript/libraries\n     * @param {string} lib - Google Map Library\n     * @return {object} return self\n     */\n    addLibrary: lib => {\n      libraries.push(lib);\n      return obj;\n    },\n    /** Add region  code bias - https://developers.google.com/maps/documentation/javascript/examples/geocoding-region-es\n     * @param {string} reg - Region Code\n     * @return {object} return self\n     */\n    addRegion: reg => {\n      region = reg;\n      return obj;\n    },\n    /** Returns path\n     * @param {string} cb - Callback function name (must be on global scope)\n     * @return {string} return path\n     */\n    getPath: cb => {\n      if (libraries.length > 0) {\n        gmaps += `&libraries=${libraries.join(',')}`;\n      }\n      gmaps += '&async=2';\n      gmaps += `&region=${region}`;\n      gmaps += `&callback=${cb}`;\n\n      return gmaps;\n    },\n  };\n\n  return obj;\n};\n\n// For Ref - document.body.appendChild(createScript(`http://maps.google.com/maps/api/js?v=3.&key=AIzaSyC6BXa6juoBqO_aUO9pFlNMVD3wroMdTrc&libraries=geometry&async=2&region=uk&callback=${cb_str}`);\n","/* global InfoBubble google */\n\nexport default maps => {\n  let m = Array.isArray(maps) ? maps : [maps];\n  return function(cb) {\n    const gmaps = m.map(({ map, options }) => {\n      options.addType();\n      options.addCenter();\n      const gmap = map(google.maps.Map, options);\n      if (options.get('boundmap')) {\n        gmap.centerMap(google.maps.LatLngBounds);\n      }\n      if (options.get('autozoom')) {\n        gmap.setZoom(google.maps.event);\n      }\n      return gmap.getMap();\n    });\n\n    if (typeof cb === 'function') cb(gmaps);\n  };\n};\n"],"names":["dataset","data","JSON","parse","opts","autozoom","boundmap","centermap","draggable","optimized","mapTypeControl","scrollwheel","type","zoom","zoomControl","dataPins","pins","lng","lat","Array","isArray","length","console","log","setDefaults","object","addType","newType","mapTypeId","google","maps","MapTypeId","addCenter","newLat","newLng","center","LatLng","get","key","getAll","update","config","map","info","InfoBubble","content","options","shadowStyle","padding","backgroundColor","borderRadius","arrowSize","borderWidth","borderColor","disableAutoPan","hideCloseButton","arrowPosition","minHeight","backgroundClassName","arrowStyle","createInfoBubble","InfoWindow","id","closer","close","marker","infowindow","elem","document","getElementById","event","addDomListener","e","preventDefault","addClose","addListener","closeAllWindows","open","trigger","setTimeout","el","markers","Map","addMarkers","m","concat","push","forEach","mk","hasOwnProperty","closeInfo","create","createMarker","makeMarker","infoWindow","Marker","position","icon","setIcon","checkMarker","picture","width","height","createInfoWindow","addOpenClose","infoActions","markerCreator","creator","centerMap","LatLngBounds","bounds","extend","getPosition","fitBounds","getMap","setPosition","pos","setCenter","setZoom","listener","getZoom","removeListener","createScript","path","script","createElement","src","plugins","obj","addPlugins","p","load","body","appendChild","i","undefined","loadPlugins","arg","Object","prototype","toString","call","mapEls","querySelectorAll","gmapsPath","gmaps","libraries","region","addLibrary","lib","addRegion","reg","getPath","cb","join","createPath","getOptions","mapCreator","finder","find","mapId","findMap","callback","gmap","LoadedCallback","window","mapLoaded","addCallback","partial","addConfig","addLibraries","getMaps","reduce","libs","mapLoader","setBounds","z"],"mappings":"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"}